freq_fore <- dlm1_fore_out[[1]][[2]]
freq_fore
tf <- time(freq_fore$f)[1] - 1/12
tf
time(freq_fore$f)
freq_fore$f
freq_fore
orig
orig <- 2016.167
y <- log(window(y_m, end = orig))
y
level0 <- y[1]
                 slope0 <- mean(diff(y))
filt <- dlmFilter(y, mod)
dlmForecast(filt, nAhead = periods)
dlmForecast(filt, nAhead = 2)
filt
filt$f
dlmForecast(filt)
dlmForecast(filtered, nAhead = periods)
dlmForecast
dlmForecast(filt_mod, nAhead = periods) 
dlmForecast(filt_mod,2 )
is.dlmFiltered(filt_mod)
filt_mod <- dlmFilter(y, fit_mod)
filt_mod <- dlmFilter(y, fit_mod)
fit_mod
filt_mod
filt_mod$m
dlmForecast(filt_mod, nAhead = periods)
dlmForecast
dlmForecast2(filt, nAhead = periods)
library(dlm)
dlmForecast2(filt, nAhead = periods)
class(mod_filt)
class(filt_mod)
y
filt_mod
freq_filt[[1]]
mod <- filt_mod
modFuture
lastObsIndex
modFuture$C0
end(mod$m)
mod$m
window(mod$m, start = end(mod$m))
mod <- freq_filt[[1]]
lastObsIndex
mod$mod
dlmForecast2(filt, nAhead = 10)
y <- log(window(y_m, end = orig))
y
dlmForecast2(filt_mod, nAhead = 10)
fit$par
filt_mod
y
filt_mod$m
end(filt_mod)
end(filt_mod$m)
is.ts(mod$m)
mod$m
filt_mod$m
window(filt_mod$m, start = end(filt_mod$m))
end(filt_mod$m)
time(end(filt_mod$m))
time(filt_mod$m)
time(filt_mod$m)[nrow(filt_mod$m)]
dlmForecast2(filt_mod, 2)
dlmForecast2(filt_mod, nAhead = 2)
dlm1_fore_out[[1]]$f
dlm1_fore_out[[1]]
dlm1_fore_out[[1]][[2]]
dlm1_fore_out[[1]][[2]]$f
plot(dlm1_fore_out[[1]][[2]]$f)
plot(exp(dlm1_fore_out[[1]][[2]]$f))
plot(exp(dlm1_fore_out[[2]][[2]]$f))
y_m
y_m
freq_dt[variable == 'freq' & !grepl('2019', as.character(month)), ]
freq_dt
y_m
y_m
dlm1_fore_out[[1][[2]]$f
dlm1_fore_out[[1]][[2]]$f
dlm1_fore_out[[1]][[2]]
dlm1_fore_out[[1]][[2]]$f
fore_plot_dt(dlm1_fore_out[[1]][[2]], plot = 'DLM1')
y_m
q()
n
cbs_dt
nl_dt
nl_dt
covid_deaths_ts
nl_dt
covid_deaths_ts
nl_dt
nl_dt[!is.na(covid_deaths)]
nl_dt[!is.na(covid_deaths)]
nl_dt[, cbs_deaths - shift(cbs_deaths)]
nl_dt[abs(cbs_deaths - shift(cbs_deaths)) > 1000, ]
cbs_dt[, unique(week)]
covid_dt[, unique(week)]
cbs_dt[week == 53, ]
cbs_dt[week %in% (52, 53, 1), ]
cbs_dt[week %in% c(52, 53, 1), ]
cbs_Dt
cbs_dt
cbs_dt
cbs_dt[week == 1]
cbs_dt[week %in% c(1, 2)]
cbs_dt[week %in% c(53, 1)]
cbs_dt
cbs_dt[week %in% c(1, 52, 53)]
cbs_dt[year %in% c(2018, 2019) & week %in% c(1, 52, 53)]
cbs_dt[, unique(week)]
window(covid_deaths_ts, start = start_yr)
 dropFirst(covid_smooth)$s[,1]
dropFirst(covid_smooth)$s
dropFirst(covid_smooth$s)[,1]
dropFirst(covid_smooth$s)
ls()
covid_dlm$FF
dropFirst(covid_smooth$s)[,c(1, 2)]
covid_dlm$FF
covid_dlm$FF
dropFirst(covid_smooth$s)
covid_dlm
covid_dlm$FF
covid_dlm$FF
covid_smooth$ss
covid_smooth$s
covid_smooth$s
dropFirst(covid_smooth$s)
covid_dlm$FF
data.table(t = time(covid_filt$f),
                  dropFirst(covid_smooth$s)[,c(1, 2)])
covid_dlm$FF
 q()
n
week_labels
head(week_labels)
week_labels$lbl[2]
week_labels
week_labels
cbs_dt
cbs_dt[, unique(week)]
cbs_dt[, unique(Perioden)]
cbs_dt[, .(Overledenen_1, shift(Overledenen_1))]
cbs_dt[, .(week, Overledenen_1, shift(Overledenen_1))]
cbs_dt[, .(week, shift(week), Overledenen_1, shift(Overledenen_1))]
cbs_dt[, .(week, shift(week, -1), Overledenen_1, shift(Overledenen_1))]
cbs_dt[, .(week, shift(week))]
cbs_dt[, .(week, shift(week, -1))]
q(0
)
q()
n
cbs_deaths_ts
lag(cbs_deaths_ts)
covid_fit$par
time(cbs_deaths_ts)
cbs_deaths_ts
time(cbs_deaths_ts)
1/52
ts_subset
ts_subset
ts_subset
unlist(ts_subset)
)
ts_subset
cbs_deaths_ts[round(time(cbs_deaths_ts), 3) %in% ts_subset]
ts_subset
str(test)
test
str(cbs_deaths_ts)
ts_subset
idx
out
out
out
cbs_deaths_ts
time(out)
ts_subset
time(ts) <- ts_subset
out
ggsubseriesplot()
ggsubseriesplot
data
data
data
p
p
p
p
p
dlmModTrig
covid_fit$par
covid_fit$par
exp(covid_fit$par[c(1:3)])
dlm_pars
)
covid_fit$par
covid_fit$par
exp(9.31880591)
sqrt(diag(W(covid_dlm)))
covid_fit$par
sqrt(9.31880591)
sqrt(covid_fit$par)
exp(covid_fit$par)
covid_dlm$dW
covid_dlm$W
est_tbl
residuals(covid_filt)
qnorm(0.025, lower = FALSE)
str(covid_filt)
gwid
hwid
se.mat
se.mat[1,2]
se.mat[1,]
hwid[1]
hwid[1]
hwid <- qnorm(0.025, lower = FALSE) *sqrt(unlist(dlmSvd2var(covid_smooth$U.S, covid_smooth$D.S)))
hwid[1]
se.mat[1,1]
qnorm(0.025, lower = FALSE) * se.mat[1,1]
q()
n
q()
n
cbs_oversterfte
covid_deaths_ts
window(covid_deaths_ts, begin = c(2020, 10))
window(covid_deaths_ts, begin = c(2020, 1))
window(covid_deaths_ts, begin = c(2020, 1))
Time Series:
Start = c(1995, 1) 
End = c(2020, 21) 
Frequency = 52 
   [1]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [19]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [37]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [55]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [73]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [91]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [109]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [127]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [145]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [163]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [181]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [199]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [217]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [235]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [253]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [271]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [289]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [307]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [325]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [343]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [361]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [379]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [397]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [415]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [433]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [451]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [469]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [487]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [505]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [523]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [541]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [559]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [577]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [595]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [613]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [631]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [649]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [667]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [685]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [703]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [721]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [739]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [757]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [775]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [793]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [811]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [829]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [847]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [865]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [883]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [901]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [919]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [937]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [955]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [973]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [991]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1009]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1027]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1045]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1063]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1081]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1099]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1117]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1135]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1153]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1171]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1189]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1207]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1225]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1243]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1261]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1279]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1297]   0   0   0   0   0   0   0   0   0   0   0   0   0   3  17 160 592 999
[1315] 976 950 794 581 387 240 142
> window(covid_deaths_ts, begin = c(2020, 1))
Time Series:
Start = c(1995, 1) 
End = c(2020, 21) 
Frequency = 52 
   [1]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [19]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [37]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [55]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [73]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  [91]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [109]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [127]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [145]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [163]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [181]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [199]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [217]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [235]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [253]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [271]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [289]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [307]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [325]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [343]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [361]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [379]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [397]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [415]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [433]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [451]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [469]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [487]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [505]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [523]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [541]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [559]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [577]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [595]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [613]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [631]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [649]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [667]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [685]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [703]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [721]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [739]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [757]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [775]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [793]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [811]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [829]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [847]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [865]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [883]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [901]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [919]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [937]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [955]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [973]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
 [991]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1009]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1027]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1045]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1063]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1081]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1099]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1117]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1135]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1153]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1171]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1189]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1207]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1225]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1243]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1261]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1279]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
[1297]   0   0   0   0   0   0   0   0   0   0   0   0   0   3  17 160 592 999
[1315] 976 950 794 581 387 240 142
> window(covid_deaths_ts, start = c(2020, 1))
window(covid_deaths_ts, start = c(2020, 1))
window(covid_deaths_ts, start = c(2020, 10))
window(cbs_deaths_ts, start = c(2020, 10))
nl_dt
covid_dt[country == 'Netherlands']
covid_dt[country == 'Netherlands' & week == 10]
covid_dt[country == 'Netherlands' & week < 12]
covid_dt[country == 'Netherlands' & week == 21]
file.exists('../data/covid.rds')
covid_dt
time()
system.time()
system.time
time
sys.time()
sys.time
Sys.time
Sys.time()
rm(cbs_dt)
cbs_dt
week_labels
cbs_dt
cbs_Dt
cbs_dt
nl_dt
fit
fourier(cbs_deaths_ts, K=2)
covid_deaths_ts
nl_dt
rivm_dt
rivm_dt
rivm_dt
rivm_dt[, .(covid_deaths = sum(`tot en met gisteren`)), by = week]
nl_dt
nl_dt
nl_dt
cbs_deaths_ts
q()
n
nl_dt
rivm_dt
rivm_dt[datum == '2020-03-21']
as.Date("12-11-2017", format = "%m-%d-%y")
griep_epidemie_duration
griep_epidemie_duration
griep_epidemie
griep_epidemie
griep_epidemie
griep_epidemie
griep_epidemie
griep_epidemie
griep_epidemie
griep_epidemie
griep_epidemie
covid_deaths_d
window(time(covid_deaths_d), start = c(2020, 1))
griep_epidemie
covid_deaths_d
griep_epidemie_d
griep_epidemie_d
griep_epidemie_d
griep_epidemie_d
week(as.Date("2017-12-11"))
time_griep
griep_epidemie_d
griep_epidemie_d
covid_fit$par
str(covid_bs)
covid_dlm$FF
covid_fit$par
covid_fit_d$par
covid_sterfte_ts
covid_deaths_ts
str(covid_bs)
covid_fit$par
covid_fit$par
covid_fit$par
covid_fit$par
covid_fit$par
as.numeric(dropFirst(se.mat))
)
)
covid_fit$par
covid_fit$par
covid_fit$par
combined_dt
combined_d
covid_fit$par
covid_fit$par
covid_deaths
covid_deaths_ts
window(covid_deaths_ts, start = start_yr)
)
begin_end_list
begin_end_list
begin_end_griep
time_griep
begin_end_griep
begin_end_griep
begin_end_griep$begin_y[i]
out
combined_d
combined_d
combined_d
q()
n
