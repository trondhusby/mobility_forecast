out_gibbs$theta[,1,]
time(y_qu)
gibbs_dt
gibbs_dt
gibbs_dt
gibbs_dt
gibbs_dt
os_fore
os_fore
os_fore
os_fore
mean_values
mean_values
mean_values
mean_values
mean_values
os_fore
mean_values
os_fore
mean_values
os_fore
q()
n
exp(1)
exp(0)
exp(-1)
freq_fit[['lt_smooth']]
names(bev_dt)
bev_dt[, unique(Perioden)]
bev_dt[, Perioden]
bev_dt
bev_dt[, unique(Perioden)]
bev_dt_hf
bev_dt
bev_dt_hf[, unique(Perioden)]
bev_dt[grepl('MM', Perioden), unique(Perioden)]
getwd()
freq_dt
freq_dt
rm(list=ls())
freq_dt
freq_dt
freq_dt
freq_dt
freq_dt
y_m
freq_filt[['local_level']]
freq_filt[['local_level']]$f
freq_fit[['local_level']]
freq_fit[['local_trend']]
fit[['local_trend']]$par
fit[['local_level']]$par
fit[['lt_arma']]
exp(fit[['lt_arma']]$par)
log(fit[['lt_arma']]$par)
exp(fit[['lt_arma']]$par)
fit[['lt_arma']]$par
freq_fit[['lt_arma']]$W
out_par
freq_filt[['lt_arma']]$W
freq_fit[['lt_arma']]$W
freq_fit[['lt_arma']]$GG
out_par
system.time(
    out_gibbs <- gibbs_est(y_m, a.theta=1, b.theta=100, n.sample = 1000, thin = 2, save.states = TRUE)
)
fit[['lt_arma']]
freq_fit[['lt_arma']]$W
freq_fit[['lt_arma']]$C0
exit
q()
n
cbs_dt <- data.table(cbs_get_toc(Language="nl"))
cbs_get_meta('81734NED')
cbs_get_meta('83474NED')
bev_dt_hist
bev_dt_hf
bev_dt_hf2
roll_pars
roll_pars
rmse_mean[]
out
out
str(out$Origin)
as.Date(out$Origin)
as.Date(out$Origin, format = '%Y %M')
as.Date(out$Origin, format = '%Y-%M')
as.Date(out$Origin, format = '%Y-%m')
as.Date(out$Origin, format = '%Y %m')
as.Date(out$Origin, format = '%Y %b')
out
err_dt
rf_fit
str(rf_fit%mod)
str(rf_fit$mod)
time(y_m)
year(y_m)
year(time(y_m))
q()
n
freq_dt
freq_dt
y_m
freq_dt[variable == 'freq',
                   .(month, value)]
quit()
n
rmse_mean
p1
two_year_fore
two_year_fore
p1
p1
p1
p2
p2
p1
orig_nms
unlist(lapply(paste('January', 2010:2018, sep = '\n')))
paste('January', 2010:2018, sep = '\n'))
paste('January', 2010:2018, sep = '\n')
p1
p1
p1
p1
p1
p1
two_year_fore
two_year_fore
grid.arrange(p1, p2, ncol = 2)
filt_plot_dt(freq_filt[[mods[7]]])
est_tbl
fore_plot_dt(tbats_fore_out[[x]], plot = 'tbats')
fore_plot_dt(tbats_fore_out[[1]], plot = 'tbats')
rf_fit
rmse_mean
rmse_mean
out
out
names(out)[1:6]
names(out)[2:6]
names(out)[2:6]
p2
p2
p2
p2
filt_plot_dt(freq_filt[[mods[7]]])[t >= 1998 ]
paste('January', seq(1998, 2020, by = 5))
tbats
rf_fit
out
out
model_names
sort(model_names)
ets
rmse_mean
filt_plot_dt
rf_fit
mape_mean
rmse
mape
rmse(10, 5)
mape(10, 5)
mape_mean
rbind(c('RMSE', rep('', ncol(rmse_mean)-1)),
      c('MAPE', rep('', ncol(rmse_mean)-1))
      )
data.frame(c('RMSE', rep('', ncol(rmse_mean)-1)),
                 c('MAPE', rep('', ncol(rmse_mean)-1))
                 )
rbind(rmse_mean, mape_mean)
rbind(rmse_mean, rep('', ncol(rmse_mean)), mape_mean)
data.frame(rep('', ncol(rmse_mean)))
t(data.frame(rep('', ncol(rmse_mean))))
rbind(rmse_mean, t(data.frame(rep('', ncol(rmse_mean)))), mape_mean)
rbindlist(list(rmse_mean,
                   t(data.frame(rep('', ncol(rmse_mean)))),
                   mape_mean)
              )
t(data.frame(t(c('RMSE', rep('', nrow(rmse_mean)))),
                 t(c('MAPE', rep('', nrow(rmse_mean)-1)))
                 ))
error_dt
error_dt
error_dt
q()
n
end_fore
n_fore
time(y_m)[end_fore]
time(y_m)
y_m
y_m
n_fore
begin_fore
time(y_m)[begin_fore]
time(y_m)
n_fore
n_fore
length(y_m)
n_fore
time(y_m)[end_fore]
max(time(y_m))
time(y_m)[length(time(y_m)) - 18]
3 / 12
2 / 12
time(y_m)[length(time(y_m)) - 19]
length(y_m)
time(y_m)
time(y_m)[1]
time(y_m)[lengh(y_m)]
time(y_m)[lenght(y_m)]
time(y_m)[length(y_m)]
month(time(y_m)[length(y_m)])
y_m
time(y_m)
View(time(y_m))
time(y_m)[which(time(y_m) >  2018)]
window(time(y_m), start = 2018)
window(time(y_m), start = 2016, end = 2016 + 18 / 12)
window(time(y_m), start = 2019, end = 2019 - 18 / 12)
window(time(y_m), end = 2019, start = 2019 - 18 / 12)
window(time(y_m), end = 2018 + 11/12, start = 2018 + 11/12 - 18 / 12)
seq(1998, 2020, by = 5)
seq(1998, 2018, by = 5)
seq(2010, 2018, by = 2)
window(y_m, begin = 2017)
window(y_m, start = 2017)
window(y_m, start = 2017 + 5/12)
length(window(y_m, start = 2017 + 5/12))
length(window(y_m, start = 2016, end = 2017 + 5/12))
n_periods <- 18
break_point <- which(round(time(y_m), 3) == 2017.167)
n_fore 
time(y_m)[end_fore]
time(y_m)[end_fore]
7 / 12
5 / 12
4/12
6/12
7/12
8/12
time(y_m)[begin_fore]
n_fore
n_fore
y_m
y
begin_fore
end_fore
time(y_m)[begin_f:end_f]
time(y_m)[begin_fore:end_fore]
n_fore
fore_plot_dt(dlm1_fore_out[[x]][[2]], plot = 'DLM1')
fore_plot_dt(dlm1_fore_out[[1]][[2]], plot = 'DLM1')
x <- 1
tf <- time(freq_fore$f)[1] - 1/12
freq_fore <- dlm1_fore_out[[1]][[2]]
freq_fore
tf <- time(freq_fore$f)[1] - 1/12
tf
time(freq_fore$f)
freq_fore$f
freq_fore
orig
orig <- 2016.167
y <- log(window(y_m, end = orig))
y
level0 <- y[1]
                 slope0 <- mean(diff(y))
filt <- dlmFilter(y, mod)
dlmForecast(filt, nAhead = periods)
dlmForecast(filt, nAhead = 2)
filt
filt$f
dlmForecast(filt)
dlmForecast(filtered, nAhead = periods)
dlmForecast
dlmForecast(filt_mod, nAhead = periods) 
dlmForecast(filt_mod,2 )
is.dlmFiltered(filt_mod)
filt_mod <- dlmFilter(y, fit_mod)
filt_mod <- dlmFilter(y, fit_mod)
fit_mod
filt_mod
filt_mod$m
dlmForecast(filt_mod, nAhead = periods)
dlmForecast
dlmForecast2(filt, nAhead = periods)
library(dlm)
dlmForecast2(filt, nAhead = periods)
class(mod_filt)
class(filt_mod)
y
filt_mod
freq_filt[[1]]
mod <- filt_mod
modFuture
lastObsIndex
modFuture$C0
end(mod$m)
mod$m
window(mod$m, start = end(mod$m))
mod <- freq_filt[[1]]
lastObsIndex
mod$mod
dlmForecast2(filt, nAhead = 10)
y <- log(window(y_m, end = orig))
y
dlmForecast2(filt_mod, nAhead = 10)
fit$par
filt_mod
y
filt_mod$m
end(filt_mod)
end(filt_mod$m)
is.ts(mod$m)
mod$m
filt_mod$m
window(filt_mod$m, start = end(filt_mod$m))
end(filt_mod$m)
time(end(filt_mod$m))
time(filt_mod$m)
time(filt_mod$m)[nrow(filt_mod$m)]
dlmForecast2(filt_mod, 2)
dlmForecast2(filt_mod, nAhead = 2)
dlm1_fore_out[[1]]$f
dlm1_fore_out[[1]]
dlm1_fore_out[[1]][[2]]
dlm1_fore_out[[1]][[2]]$f
plot(dlm1_fore_out[[1]][[2]]$f)
plot(exp(dlm1_fore_out[[1]][[2]]$f))
plot(exp(dlm1_fore_out[[2]][[2]]$f))
y_m
y_m
freq_dt[variable == 'freq' & !grepl('2019', as.character(month)), ]
freq_dt
y_m
y_m
dlm1_fore_out[[1][[2]]$f
dlm1_fore_out[[1]][[2]]$f
dlm1_fore_out[[1]][[2]]
dlm1_fore_out[[1]][[2]]$f
fore_plot_dt(dlm1_fore_out[[1]][[2]], plot = 'DLM1')
y_m
q()
n
